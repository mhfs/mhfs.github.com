---
layout: post
title: PHP/Symfony fading out
tags:
- php
- symfony
- framework
---

Back when I was a college student, around 2001, I had my first contact with <a href="http://www.php.net/" target="_blank">PHP</a>. Since that time 8 years had passed and I got really close to it. About 3 years ago I joined a project and had to choose one among several PHP frameworks available out there to use as the base for all the development.

This was when I first got in touch with <a href="http://www.symfony-project.org/" target="_blank">Symfony</a>. Love at first sight. Compared to the "procedural way of coding" I was used to it was like being instantly dropped into heaven.

Time got gone, code got written, customers got happy and me too. Keeping surfing the delightful waves of great Symfony features.

But like everything else in life, while time went away things that I didn't even notice in the beginning started to get really annoying.

That's the case of:
* writing nested foreachs in plain php mixed with html
* writing a 50 chars long line of code to fetch a simple session variable
* keeping track of database modifications manually to apply into production later on - also manually
* typing "php symfony cc" a thousand times a day
* finding out that the code you just grabbed from the 1.2 version of the symfony book actually doesn't work in Symfony 1.2

The list could continue a lot longer. But pushing Symfony down is not the point. The point is that even if Symfony is still great and has a lot of fantastic features it simply doesn't feel anymore like the solution for all my problems like it used to feel.

I have Symfony applications live with which I am pretty happy, Symfony applications under development becoming awesome and I'll keep using Symfony when it fits specific needs. Probably I'll even write technical posts about it in here.

But happens that a couple of weeks ago in an afternoon full of Symfony frustration, without looking for it, I found myself in front of a <a href="http://rubyonrails.org/" target="_blank">Ruby on Rails</a> blog post. A Rails which by the way I was already been hearing of a lot. Since then I'm investing a lot of free time on it. Sharing this experience will be the objective of my next post.

Cheers!